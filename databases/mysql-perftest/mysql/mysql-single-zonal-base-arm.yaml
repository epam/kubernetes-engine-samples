apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
  namespace: mysql
  labels:
    app: mysql-app
spec:
  clusterIP: None
  ports:
    - name: '3306'
      port: 3306
      protocol: TCP
      targetPort: 3306
  selector:
    app: mysql-app
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: mysql
  labels:
    app: mysql
data:
  default-auth.cnf: |
    [mysqld]
    ssl-ca=/etc/mysql/ssl/ca.pem
    ssl-cert=/etc/mysql/ssl/server-cert.pem
    ssl-key=/etc/mysql/ssl/server-key.pem
    require_secure_transport = ON
    default_authentication_plugin=mysql_native_password
    innodb_buffer_pool_size = 100G
    innodb_redo_log_capacity = 120G
    max_connections = 3000
    max_prepared_stmt_count = 1048576
    # log_error_verbosity = 3
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: mysql
  labels:
    app: mysql-app
spec:
  serviceName: mysql-svc
  replicas: 1
  selector:
    matchLabels:
      app: mysql-app
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Delete
  template:
    metadata:
      labels:
        app: mysql-app
    spec:
      securityContext:
        sysctls:
        # - name: net.ipv4.tcp_fin_timeout
        #   value: "5"
        # - name: net.ipv4.tcp_tw_reuse
        #   value: "1"
        # - name: net.ipv4.tcp_max_syn_backlog
        #   value: "65535"
        # - name: net.core.somaxconn
        #   value: "65535"
      nodeSelector:
        cloud.google.com/gke-nodepool: pool-mysql
      tolerations:
        - key: "app.stateful/component"
          operator: "Equal"
          value: "mysql"
          effect: NoSchedule
        - key: "kubernetes.io/arch"
          operator: "Equal"
          value: "arm64"
          effect: NoSchedule
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - mysql-app
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: mysql-container
          image: mysql:8.0
          imagePullPolicy: Always
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: root-password
            - name: MYSQL_DATABASE
              value: test
            - name: MYSQL_USER
              value: bench_user
            - name: MYSQL_PASSWORD
              value: mysqlpass123
            - name: MYSQL_INITDB_SKIP_TZINFO
              value: "1"
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
            - name: mysql-config
              mountPath: /etc/mysql/conf.d
            - name: ssl-certs
              mountPath: /etc/mysql/ssl/ca.pem
              subPath: ca.pem
            - name: ssl-certs
              mountPath: /etc/mysql/ssl/server-cert.pem
              subPath: server-cert.pem
            - name: ssl-certs
              mountPath: /etc/mysql/ssl/server-key.pem
              subPath: server-key.pem
          resources:
            requests:
              memory: 100Gi
              cpu: "10"
            limits:
              memory: 116Gi
              cpu: "15"
      volumes:
        - name: mysql-config
          configMap:
            name: mysql-config
        - name: ssl-certs
          secret:
            secretName: mysql-ssl-certs
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: balanced-storage-base
        resources:
          requests:
            storage: "500Gi"
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: mysql
type: Opaque
data:
  root-password: bXlzcWxwYXNzMTIz 