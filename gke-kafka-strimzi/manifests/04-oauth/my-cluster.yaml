apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-cluster
spec:
  kafka:
    version: 3.4.0
    replicas: 3
    template:
      pod:
        tolerations:
        - key: "app.stateful/component"
          operator: "Equal"
          value: "kafka-broker"
          effect: NoSchedule
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: "app.stateful/component"
                  operator: In
                  values:
                  - "kafka-broker"
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: kafka
                    strimzi.io/cluster: my-cluster
                    strimzi.io/component-type: kafka
                topologyKey: "kubernetes.io/hostname"
    resources:
      requests:
        memory: 5Gi
        cpu: "1"
      limits:
        memory: 5Gi
        cpu: "2"
    jvmOptions:
      -Xms: 4096m
      -Xmx: 4096m
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: oauth
        port: 9093
        type: internal
        tls: false
        authentication:
          type: oauth
          validIssuerUri: "https://accounts.google.com"
          jwksEndpointUri: "https://www.googleapis.com/oauth2/v3/certs"
          userNameClaim: email
          checkAccessTokenType: false
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "3.4"
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 100Gi
        class: premium-rwo
        deleteClaim: false
  zookeeper:
    template:
      pod:
        tolerations:
        - key: "app.stateful/component"
          operator: "Equal"
          value: "zookeeper"
          effect: NoSchedule
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: "app.stateful/component"
                  operator: In
                  values:
                  - "zookeeper"
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100  
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: zookeeper
                    strimzi.io/cluster: my-cluster
                    strimzi.io/component-type: zookeeper
                topologyKey: "kubernetes.io/hostname"

    replicas: 3
    resources:
      requests:
        memory: 5Gi
        cpu: "1"
      limits:
        memory: 5Gi
        cpu: "2"
    jvmOptions:
      -Xms: 4096m
      -Xmx: 4096m
    storage:
      type: persistent-claim
      size: 100Gi
      class: premium-rwo
      deleteClaim: false
  entityOperator:
    topicOperator: {}
    userOperator: {} 
